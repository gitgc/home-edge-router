(cors) {
  @cors_preflight{args.0} method OPTIONS
  @cors{args.0} header Origin {args.0}

  handle @cors_preflight{args.0} {
    header {
      Access-Control-Allow-Origin "{args.0}"
      Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS"
      Access-Control-Allow-Headers *
      Access-Control-Allow-Credentials "true"
      Access-Control-Max-Age "3600"
      defer   #turn on defer on your header directive to make sure the new header values are set after proxying
    }
    respond "" 204
  }

  handle @cors{args.0} {
    header {
      Access-Control-Allow-Origin "{args.0}"
      Access-Control-Expose-Headers *
      Access-Control-Allow-Credentials "true"
      defer
    }
  }
}

(auth) {
  @remote_host_filter {
    not remote_ip 192.168.4.170
    not remote_ip 192.168.1.124
    not path /caddy-health-check
  }

  handle @remote_host_filter {
    authorize with mypolicy
  }
}

auth.{$CADDY_DOMAIN} {
  encode gzip

  import cors https://auth.coia.io
  import cors https://home.coia.io
  import cors https://nvr.coia.io
  import cors https://scrypted.coia.io
  import cors https://hifi.coia.io

  authenticate with myportal
}
